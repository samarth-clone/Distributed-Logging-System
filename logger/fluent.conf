# fluent.conf

<source>
  @type forward
</source>

# Transform incoming records to extract the log_level
<filter **>
  @type record_transformer
  <record>
    log_level ${record["log_level"] || 'UNKNOWN'}
  </record>
</filter>


# If log level is INFO, write it to a file with buffered output
<match log_level.INFO>
  @type file
  path /var/log/fluentd/batched-logs.${tag}.json.gz  # Include tag placeholder in the path
  <buffer tag>
    @type memory
    chunk_limit_size 1m
    flush_interval 10s
    retry_forever true
  </buffer>
  time_slice_format %Y%m%d%H%M
  time_key timestamp
  compress gzip
</match>


# If log level is WARN or ERROR, output it to stdout
<match log_level.WARN,log_level.ERROR>
  @type stdout
  <format>
    @type json
  </format>
</match>

# Debugging output to help verify the incoming messages
<match **>
  @type stdout
  <format>
    @type json
  </format>
</match>

